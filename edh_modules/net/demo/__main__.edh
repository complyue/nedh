
{#
 # the client-facing module for nedh demo service
 # 
 # this module is instantiated and run per client connection.
 #
 # a `{ net.Peer: peer }` object is guaranteed to have been
 # implanted by per-client host module preparation.
 #
 # none or more of other artifacts may have been implanted as well,
 # according to the per-client service module initialization method
 # (e.g. __serv_init__) specified on construction of the very
      net.Server( 'net/demo', ..., init=__serv_init__, )
 # instance.
 #
 #}

console.info<| 'Serving demo client - ' ++ peer

peer.postCommand( repr("Hello, " ++ peer) )

{ while true {
  case peer.readCommand() of {
    nil -> { break }  # end-of-stream
    { cmdVal } -> {
      console.debug<| 'Got cmd ' ++ cmdVal ++ ' from ' ++ peer

      # serving as a simple expression evaluator, post the result back
      peer.postCommand( repr(cmdVal) )
    }
  }
} } $=> { exc } -> {
  console.warn<| 'Demo client ' ++ peer ++ ' error: ' ++ exc
}

console.info<| 'Done with demo client - ' ++ peer
