
{#
 # conventional effects implemented on top of the basic effectful resource
 # `@netPeer`
 #}

import * './symbols'

export method @sendConOut(d, *ds) {
  peer = behave @netPeer
  peer.p2c(conout, repr(d))
  for d from ds do
    peer.p2c(conout, repr(d))
}

export method @sendConMsg(d, *ds) {
  peer = behave @netPeer
  peer.p2c(conmsg, repr(d))
  for d from ds do
    peer.p2c(conmsg, repr(d))
}

export method @sendCmd (c, *cs) {
  peer = behave @netPeer
  peer.postCommand(repr(c))
  for c from cs do
    peer.postCommand(repr(c))
}

export method @sendData (d, *ds) {
  peer = behave @netPeer
  peer.p2c(dataChan, repr(d))
  for d from ds do
    peer.p2c(dataChan, repr(d))
}
